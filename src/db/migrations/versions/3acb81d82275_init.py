"""init

Revision ID: 3acb81d82275
Revises:
Create Date: 2025-10-24 16:10:25.889567

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3acb81d82275"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "activities",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["activities.id"], name=op.f("activities_parent_id_fkey")),
        sa.PrimaryKeyConstraint("id", name=op.f("activities_pkey")),
        sa.UniqueConstraint("name", name=op.f("activities_name_key")),
    )
    op.create_index(op.f("activities_id_idx"), "activities", ["id"], unique=False)
    op.create_table(
        "buildings",
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("buildings_pkey")),
        sa.UniqueConstraint("address", name=op.f("buildings_address_key")),
    )
    op.create_index(op.f("buildings_id_idx"), "buildings", ["id"], unique=False)
    op.create_table(
        "organizations",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("phone_number", sa.ARRAY(sa.String()), nullable=False),
        sa.Column("building_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["building_id"], ["buildings.id"], name=op.f("organizations_building_id_fkey")),
        sa.PrimaryKeyConstraint("id", name=op.f("organizations_pkey")),
        sa.UniqueConstraint("name", name=op.f("organizations_name_key")),
    )
    op.create_index(op.f("organizations_id_idx"), "organizations", ["id"], unique=False)
    op.create_table(
        "organizations_to_activities_relationship",
        sa.Column("organization_id", sa.Integer(), nullable=False),
        sa.Column("activity_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["activity_id"], ["activities.id"], name=op.f("organizations_to_activities_relationship_activity_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("organizations_to_activities_relationship_organization_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("organizations_to_activities_relationship_pkey")),
        sa.UniqueConstraint(
            "organization_id", "activity_id", name=op.f("organizations_to_activities_relationship_organization_id_key")
        ),
    )
    op.create_index(
        op.f("organizations_to_activities_relationship_id_idx"),
        "organizations_to_activities_relationship",
        ["id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("organizations_to_activities_relationship_id_idx"), table_name="organizations_to_activities_relationship"
    )
    op.drop_table("organizations_to_activities_relationship")
    op.drop_index(op.f("organizations_id_idx"), table_name="organizations")
    op.drop_table("organizations")
    op.drop_index(op.f("buildings_id_idx"), table_name="buildings")
    op.drop_table("buildings")
    op.drop_index(op.f("activities_id_idx"), table_name="activities")
    op.drop_table("activities")
    # ### end Alembic commands ###
